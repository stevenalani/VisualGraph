@page "/view"
@using System.IO
@using Microsoft.Msagl.Core.Layout;
@using Microsoft.Msagl.Miscellaneous;
@using Microsoft.Msagl.Routing;
@using Microsoft.Msagl.Core.Geometry.Curves;
@inject IGraphService graphService
@inject IToastService toastService

<div class="flex-wrapper">
    <div class="flex-wrapper-title">
        <h3 class="pr-2">Graphen betrachten</h3>
    </div>
    <div class="left-container">
        @(graphService.GetRenderFragment(withDefaultCallbacks:false).Result)
    </div>
</div>

@code {
    private string oldgraphName;
    private async Task LayoutGraph()
    {
        await graphService.LayoutGraph();
        StateHasChanged();
    }
    private async Task Crop()
    {
        await graphService.Fit();
        await graphService.Center();
    }
    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if(oldgraphName != graphService.CurrentGraphModel.Name)
        {
            graphService.CurrentGraph.NodeClick += DefaultCallbacks.ToggleActiveStateNode;
            graphService.CurrentGraph.EdgeClick += DefaultCallbacks.ToggleActiveStateEdge;
            graphService.CurrentGraph.RegisterContextMenus();
            oldgraphName = graphService.CurrentGraphModel.Name;
        }


        return base.OnAfterRenderAsync(firstRender);
    }
}