@using Microsoft.AspNetCore.Components.Authorization
@inject IHttpClientFactory ClientFactory
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
﻿
<Router AppAssembly="@typeof(Program).Assembly">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
    </Found>
    <NotFound>
        <LayoutView Layout="@typeof(MainLayout)">
            <p>Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code{       
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var HttpClient = ClientFactory.CreateClient("api");
            var state = await AuthenticationStateProvider.GetAuthenticationStateAsync();

            if (state.User.Identity.IsAuthenticated)
            {
                var response = await HttpClient.PostAsync("api/account/verifieduser", new StringContent(JsonConvert.SerializeObject(state.User.Identity.Name), Encoding.UTF8, "application/json"));
                var responseData = JsonConvert.DeserializeObject<bool>((await response.Content.ReadAsStringAsync()));
                if (responseData)
                {
                    NavigationManager.NavigateTo("/", true);
                }
            }
            
        }
    }
}