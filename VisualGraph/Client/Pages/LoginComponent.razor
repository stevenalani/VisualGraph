@page "/clientlogin"

@inherits AccountComponent

@using System.Text
@using System.Text.Json
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Authorization


<div class="card">
    <div class="card-header">
        <p class="card-title">Login</p>
    </div>
    <div class="card-body">
        <div class="form-group form-inline">
            <label class="col-form-label">Benutzername:</label><input class="form-control" type="text" @bind="username" />
        </div>
        <div class="form-group form-inline">
            <label class="col-form-label">Passwort:</label><input class="form-control" type="password" @bind="passwd" />
        </div>
        <p class="alert">@userModel.ErrorMessage</p>
        <button class="btn btn-success" @onclick="Login">Login</button>
    </div>
    <div class="card-footer">
        <p class="card-text">Kein Account? <a href="account/register">Hier registrieren</a></p>
    </div>
</div>
@ChildContent



@code {

    public string username = "";
    private string passwd = "";
    UserModel userModel = new UserModel();
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    override protected async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var isAuth = (await AuthTask).User?.Identity.IsAuthenticated;
        if (isAuth??false)
        {
            NavigationManager.NavigateTo("/account/manage");
        }
    }

    private async Task Login()
    {

        userModel = new UserModel()
        {
            Username = username,
            Password = passwd,
        };
        var response = await HttpClient.PostAsJsonAsync<UserModel>("api/account/login",userModel);
        IEnumerable<string> vals;
        response.Headers.TryGetValues("set-cookie", out vals);
        if (vals != null)
        {
            await JSRuntime.InvokeVoidAsync("SetCookie", vals?.LastOrDefault() ?? "");
            NavigationManager.NavigateTo(NavigationManager.Uri, true);
            userModel.IsAuth = true;
        }
        NavigationManager.NavigateTo("/account/manage",true);
    }
}
