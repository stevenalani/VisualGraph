@page "/Account/Login"

@inherits AccountComponent

@using System.Text
@using System.Text.Json
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Authorization

@if (!BodyOnly)
{
    <div class="card">
        <div class="card-header">
            <p class="card-title">@(!Register ? "Login" : "Registrierung")</p>
        </div>
        @if (!Register)
        {
            <div class="card-body">
                <div class="form-group form-inline">
                    <label class="col-form-label">Benutzername:</label><input class="form-control" type="text" @bind="username" />
                </div>
                <div class="form-group form-inline">
                    <label class="col-form-label">Passwort:</label><input class="form-control" type="password" @bind="passwd" />
                </div>
                <p class="text-danger">@UserModel.ErrorMessage</p>
                <button class="btn btn-success" @onclick="Login">Login</button>
            </div>
        }
        else
        {
            <RegisterComponent BodyOnly="true" />
        }
        <div class="card-footer">
            <p class="card-text">@(!Register ? "Kein Account? " : "Bereits Mitglied? ") <a href="#" @onclick="@(() => { Register = !Register; })">@(!Register ? "Hier registrieren" : "Hier einloggen")</a></p>
        </div>
    </div>
}
else
{
    <div class="card">
        @if (!Register)
        {
            <div class="card-body">
                <div class="form-group form-inline">
                    <label class="col-form-label">Benutzername:</label><input class="form-control" type="text" @bind="username" />
                </div>
                <div class="form-group form-inline">
                    <label class="col-form-label">Passwort:</label><input class="form-control" type="password" @bind="passwd" />
                </div>
                <p class="text-danger">@UserModel.ErrorMessage</p>
                <button class="btn btn-success" @onclick="Login">Login</button>
            </div>
        }
        else
        {
            <RegisterComponent BodyOnly="true" />
        }
        <div class="card-footer">
            <p class="card-text">@(!Register ? "Kein Account? " : "Bereits Mitglied? ") <a href="#" @onclick="@(() => { Register = !Register; })">@(!Register ? "Hier registrieren" : "Hier einloggen")</a></p>
        </div>
    </div>
}


@code {
    [Parameter]
    public bool Register { get; set; } = false;
    [Parameter]
    public bool BodyOnly { get; set; } = false;
    public string username = "";
    private string passwd = "";
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    override protected async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var isAuth = (await AuthTask).User?.Identity.IsAuthenticated;
        if (isAuth ?? false)
        {
            NavigationManager.NavigateTo("/account");
        }
    }

    private async Task Login()
    {

        UserModel = new UserModel()
        {
            Username = username,
            Password = passwd,
        };
        var response = await HttpClient.PostAsJsonAsync<UserModel>("api/account/login", UserModel);
        UserModel = await response.Content.ReadFromJsonAsync<UserModel>();
        if (!UserModel.HasError)
        {
            NavigationManager.NavigateTo("/account", true);
        }
    }
}
