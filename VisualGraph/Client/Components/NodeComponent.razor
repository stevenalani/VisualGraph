@inherits GraphInternalUI
@((MarkupString)$"<text class=\"nodeText\" text-anchor=\"middle\" x=\"{ Node.PosXText }\" y=\"{ (Node.Pos.Y + 2 *graphService.GraphStyleParameters.NodeRadius).ToString(CultureInfo.InvariantCulture)}\">{Node.Name}</text>")
@if (Node.IsActive)
{
    @((MarkupString)$"<text class=\"nodeText\" text-anchor=\"middle\" x=\"{ (Node.Pos.X).ToString(CultureInfo.InvariantCulture)}\" y=\"{(Node.Pos.Y + 2 * graphService.GraphStyleParameters.NodeRadius + graphService.GraphStyleParameters.TextSize * 0.9).ToString(CultureInfo.InvariantCulture)}\"> { String.Format("P( {0,0:0.00} ; {1,0:0.00} )", Node.Pos.X, Node.Pos.Y)}</text>")
}
<circle id="@($"node-{ Node.Id}")"
        class="node @Node.Activeclass @(((ICSSProperties)Node).ClassesProppertie)"
        style="transform-origin:@($"{Node.PosXText}px {@Node.PosYText}px")"
        cx="@Node.PosXText"
        cy="@(Node.PosYText)"
        r="@graphService.GraphStyleParameters.NodeRadiusText"
        @onclick="onclick" @onclick:stopPropagation="true"
        @onmousedown="onmousedown" @onmousedown:stopPropagation="true"
        @onmouseup="onmouseup" @onmouseup:stopPropagation="true"
        @ontouchstart="ontouchstart" @ontouchstart:stopPropagation="true"
        @ontouchenter="ontouchenter" @ontouchenter:stopPropagation="true"
        @ontouchend="ontouchend" @ontouchend:stopPropagation="true">
</circle>
@code {
    /// <summary>
    /// Der Knoten, welcher dieser Komponente zugeordnet ist
    /// </summary>
    [Parameter]
    public Node Node { get; set; }
    /// <summary>
    /// Knoten Klick Callback. Was soll bei Klick geschehen
    /// </summary>
    [Parameter]
    public EventCallback<MouseEventArgs> onclick { get; set; }
    /// <summary>
    /// Knoten Maustaste gedrückt Callback. Was soll geschehen, wenn die Maustaste gedrückt ist
    /// </summary>
    [Parameter]
    public EventCallback<MouseEventArgs> onmousedown { get; set; }
    /// <summary>
    /// Knoten Maustaste losgelassen Callback. Was soll geschehen, wenn die Maustaste losgelassen wurde
    /// </summary>
    [Parameter]
    public EventCallback<MouseEventArgs> onmouseup { get; set; }
    /// <summary>
    /// Knoten Touch Callback. Was soll geschehen, wenn ein Knoten per Touch berührt wird
    /// </summary>
    [Parameter]
    public EventCallback<TouchEventArgs> ontouchstart { get; set; }
    /// <summary>
    /// Knoten Touch Callback. Was soll geschehen, wenn über einen Knoten gewischt wird
    /// </summary>
    [Parameter]
    public EventCallback<TouchEventArgs> ontouchenter { get; set; }
    /// <summary>
    /// Knoten Touch Callback. Was soll geschehen, wenn der Touch endet
    /// </summary>
    [Parameter]
    public EventCallback<TouchEventArgs> ontouchend { get; set; }



}
